#!/bin/bash
#SBATCH --nodes=21            #Numero de Nós
#SBATCH --ntasks-per-node=24 #Numero de tarefas por Nó
#SBATCH --ntasks=504           #Numero total de tarefas MPI
#SBATCH -p cpu 	      		#min 21 max 50 nós, 48h (lista: https://sdumont.lncc.br/support_manual.php?pg=support#5)
#SBATCH -J lambdas         #Nome job
#SBATCH --exclusive          #Utilização exclusiva dos nós durante a execução do job

#SBATCH --mail-type=END,FAIL,TIME_LIMIT
#SBATCH --mail-user=andersonrochatavares@gmail.com

#IGNORE_SBATCH --time=00:40:00

#Exibe os nós alocados para o Job
echo $SLURM_JOB_NODELIST
nodeset -e $SLURM_JOB_NODELIST

cd $SLURM_SUBMIT_DIR

#Configura o script intermediario
SCRIPT=${PWD}/slurm/startjobs.sh

# carrega o java 11 e o python3
module load java/jdk-11
module load python/3.7.2

# creates the queue directory (ignores if already exists)
mkdir -p lambdaqueue

# resets the old queue (if it exists)
rm -f lambdaqueue/todo.txt # -f fails silently if the file does not exist

# cria as execucoes
for s in {all,"HP-,CE,FC,R"}; do 
	for o in {selfplay,players.A3N}; do 
		for t in {100,500,1000}; do 
		
			# first has a > to override the todo.txt; second has a >> to append the test commands to it
			python3 scripts/generate-lambda-train.py results/lambda_train-vs-$o -t $t -r 5 -s $s --train-opponent=$o >> lambdaqueue/todo.txt
			python3 scripts/generate-lambda-test.py results/lambda_train-vs-$o -t $t -i 0 -f 4 -s $s >> lambdaqueue/todo.txt
		done
	done
done

echo "Finished generating the job list (`wc -l lambdaqueue/todo.txt` jobs)"

# runs 21 times the script that launches 24 file job clients each
for i in {1..21}; do 
	initial=$(( (($i - 1)) * 24 + 1)) 	# (i-1)*24 + 1
	final=$(( $i * 24 ))				# i*24
	srun --resv-ports  --nodes 1 --ntasks=1 -c 24 $SCRIPT $initial $final lambdaqueue & 
done

echo "Jobs submitted."

wait
